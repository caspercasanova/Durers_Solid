[gd_resource type="VisualShader" load_steps=15 format=3 uid="uid://cogij7806hfxy"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_hye5w"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_d6cye"]
seamless = true
noise = SubResource("FastNoiseLite_hye5w")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_sxnr0"]
expanded_output_ports = [0]
texture = SubResource("NoiseTexture2D_d6cye")
texture_type = 1

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_ngiq7"]
function = 15

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_022ku"]
constant = Color(1, 0.529412, 0, 1)

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_og7nw"]
function = 14

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_fdvfy"]
output_port_for_preview = 0
texture = SubResource("NoiseTexture2D_d6cye")

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_uix6t"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_13wo3"]
texture = SubResource("NoiseTexture2D_uix6t")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hpmc1"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_bfegw"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_b2ylj"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_e7o0a"]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_oslhe"]
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_vtx_2;
uniform sampler2D tex_frg_8;
uniform sampler2D tex_frg_2 : source_color;



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_vtx_2, UV);


// Input:7
	vec3 n_out7p0 = NORMAL;


// VectorOp:6
	vec3 n_out6p0 = vec3(n_out2p0.xyz) * n_out7p0;


// VectorOp:4
	vec3 n_out4p0 = n_out3p0 + n_out6p0;


// Output:0
	VERTEX = n_out4p0;


}

void fragment() {
// Texture2D:8
	vec4 n_out8p0 = texture(tex_frg_8, UV);


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// FloatFunc:3
	float n_out3p0 = round(n_out2p0.x);


// ColorConstant:5
	vec4 n_out5p0 = vec4(1.000000, 0.529412, 0.000000, 1.000000);


// VectorFunc:7
	vec3 n_out7p0 = degrees(vec3(n_out5p0.xyz));


// Output:0
	ALBEDO = vec3(n_out8p0.xyz);
	ALPHA = n_out3p0;
	EMISSION = n_out7p0;


}
"
nodes/vertex/2/node = SubResource("VisualShaderNodeTexture_13wo3")
nodes/vertex/2/position = Vector2(-840, 260)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_hpmc1")
nodes/vertex/3/position = Vector2(-500, 100)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorOp_bfegw")
nodes/vertex/4/position = Vector2(0, 160)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorOp_b2ylj")
nodes/vertex/6/position = Vector2(-360, 260)
nodes/vertex/7/node = SubResource("VisualShaderNodeInput_e7o0a")
nodes/vertex/7/position = Vector2(-800, 640)
nodes/vertex/8/node = SubResource("VisualShaderNodeVectorOp_oslhe")
nodes/vertex/8/position = Vector2(-120, 420)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 0, 4, 0, 0, 0, 6, 0, 4, 1, 2, 0, 6, 0, 7, 0, 6, 1)
nodes/fragment/0/position = Vector2(920, 120)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_sxnr0")
nodes/fragment/2/position = Vector2(-660, 600)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatFunc_ngiq7")
nodes/fragment/3/position = Vector2(560, 300)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorConstant_022ku")
nodes/fragment/5/position = Vector2(-80, 980)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorFunc_og7nw")
nodes/fragment/7/position = Vector2(440, 600)
nodes/fragment/8/node = SubResource("VisualShaderNodeTexture_fdvfy")
nodes/fragment/8/position = Vector2(-540, -20)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 1, 7, 0, 0, 5, 5, 0, 7, 0, 8, 0, 0, 0, 2, 0, 3, 0)
